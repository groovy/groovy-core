task doc(dependsOn: [javadoc, groovydoc, 'docGDK']) {
    footer = "Copyright &amp;copy; 2003-2012 The Codehaus. All rights reserved."
    title = "Groovy ${groovyVersion}"
}

javadoc {
    maxMemory = javaDoc_mx
    project.configure(options) {
        windowTitle = doc.title
        docTitle = doc.title
        encoding = "ISO-8859-1"
        author = true
        version = true
        overview = "src/main/overview.html"
        footer = doc.footer
        source = "1.5"
        links("http://docs.oracle.com/javase/6/docs/api/", "http://evgeny-goldin.org/javadoc/ant/api/",
                "http://commons.apache.org/cli/api-release", "http://kentbeck.github.com/junit/javadoc/latest/",
                "http://docs.oracle.com/javaee/6/api/", "http://www.antlr2.org/javadoc")
    }
}

groovydoc {
    dependsOn classes
    groovyClasspath = configurations.compile
    use = true
    windowtitle = doc.title
    doctitle = doc.title
    header = doc.title
    footer = doc.footer
    overview = file("src/main/overview.html")
    includePrivate = false
    link "http://docs.oracle.com/javaee/6/api/", "javax.servlet.", "javax.management."
    link "http://docs.oracle.com/javase/6/docs/api/", "java.", "org.xml.", "javax.", "org.w3c."
    link "http://evgeny-goldin.org/javadoc/ant/api/", "org.apache.ant.", "org.apache.tools.ant."
    link "http://kentbeck.github.com/junit/javadoc/latest/", "org.junit.", "junit."
    link "http://www.antlr2.org/javadoc", "antlr."
    link "http://commons.apache.org/cli/api-release", "org.apache.commons.cli."
}

task docGDK {
    destinationDir = "$buildDir/html/groovy-jdk"
    inputs.files sourceSets.tools.runtimeClasspath
    outputs.dir destinationDir
    doFirst {task ->
        ant {
            java(classname: "org.codehaus.groovy.tools.DocGenerator", fork: "yes", failonerror: "true",
                    classpath: sourceSets.tools.runtimeClasspath.asPath,
                    errorproperty: 'edr',
                    outputproperty: 'odr') {
                arg(value: "org.codehaus.groovy.runtime.DefaultGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.DefaultGroovyStaticMethods")
                arg(value: "org.codehaus.groovy.runtime.DateGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.EncodingGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.IOGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.ProcessGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.ResourceGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.SocketGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.SqlGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.StringGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.SwingGroovyMethods")
                arg(value: "org.codehaus.groovy.runtime.XmlGroovyMethods")
                arg(value: "org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods")
                arg(value: "org.codehaus.groovy.vmplugin.v6.PluginDefaultGroovyMethods")
                arg(value: "org.codehaus.groovy.vmplugin.v6.PluginStaticGroovyMethods")
            }
//            println "Out: " + ant.properties.edr
//            println "Err: " + ant.properties.odr
        }
        copy {
            into task.destinationDir
            from "src/tools/org/codehaus/groovy/tools/groovy.ico", "src/tools/org/codehaus/groovy/tools/stylesheet.css"
        }
    }
}
